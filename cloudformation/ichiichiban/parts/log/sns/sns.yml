---
AWSTemplateFormatVersion: 2010-09-09
Description:
  Setting up Log abnormality notification
Parameters:
  ProductName:
    Type       : String
    Description: Product Name (Ex. MansionValue)
    MinLength  : 1
  Environment:
    Type         : String
    Default      : Stg
    AllowedValues:
      - Stg
      - Prod
    Description  : Select Environment
    MinLength    : 1
  LogGroupArnList:
    Type       : String
    Description: List of log group ARN
    MinLength  : 1
Mappings:
  SlackNotificationLambdaFunction:
    Stg :
      ApiUrl: https://hooks.slack.com/services/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
    Prod:
      ApiUrl: https://hooks.slack.com/services/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
Resources:
  # ---------------------------------------------------------------#
  # Create Log SNS Topic
  # ---------------------------------------------------------------#
  LogSnsTopic:
    Type      : AWS::CloudFormation::Stack
    Properties:
      Parameters:
        TopicDisplayName: !Sub "${ProductName}-${Environment} Log"
        TopicName       : !Sub "${ProductName}-${Environment}-Log-Topic"
      TemplateURL: ./../../sns/topic.yml
  # ---------------------------------------------------------------#
  # Create Log Slack notification Lambda
  # ---------------------------------------------------------------#
  LogSlackNotificationLambdaExecutionRole:
    Type      : AWS::CloudFormation::Stack
    Properties:
      Parameters:
        ResourceArnList: !Ref LogGroupArnList
      TemplateURL: ./slack-notification-lambda/lambda-execution-role.yml
  LogSlackNotificationLambdaFunction:
    Type      : AWS::Lambda::Function
    Properties:
      Code        : ./slack-notification-lambda/lambda-function
      Description : !Sub "${ProductName}-${Environment} Log Slack Notification Lambda"
      Environment :
        Variables:
          API_URL: !FindInMap [ SlackNotificationLambdaFunction, !Ref Environment, ApiUrl ]
      Handler     : ichiichiban-log-slack-notification.lambda_handler
      Role        : !GetAtt LogSlackNotificationLambdaExecutionRole.Outputs.LambdaExecutionRoleArn
      Runtime     : python3.7
      Timeout     : 60
  LogSlackNotificationLambdaPermission:
    Type      : AWS::Lambda::Permission
    Properties:
      Action      : lambda:InvokeFunction
      FunctionName: !Ref LogSlackNotificationLambdaFunction
      Principal   : sns.amazonaws.com
      SourceArn   : !GetAtt LogSnsTopic.Outputs.SnsTopicArn
  # ---------------------------------------------------------------#
  # Create Log SNS Subscription
  # ---------------------------------------------------------------#
  LogLambdaSubscription:
    Type      : AWS::CloudFormation::Stack
    Properties:
      Parameters:
        LambdaArn: !GetAtt LogSlackNotificationLambdaFunction.Arn
        TopicArn : !GetAtt LogSnsTopic.Outputs.SnsTopicArn
      TemplateURL: ./../../sns/lambda-subscription.yml
Outputs:
  LogSnsTopicArn:
    Description: The ARN of log SNS topic
    Value      : !GetAtt LogSnsTopic.Outputs.SnsTopicArn
  LogSnsTopicName:
    Description: The Name of log SNS topic
    Value      : !GetAtt LogSnsTopic.Outputs.SnsTopicName
  LogSlackNotificationLambdaFunctionName:
    Description: The name of log slack notification lambda
    Value      : !Ref LogSlackNotificationLambdaFunction
  LogSlackNotificationLambdaFunctionArn:
    Description: The ARN of log slack notification lambda
    Value      : !GetAtt LogSlackNotificationLambdaFunction.Arn