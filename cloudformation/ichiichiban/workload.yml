---
# ---------------------------------------------------------------#
# Create workload
# ---------------------------------------------------------------#
AWSTemplateFormatVersion: 2010-09-09
Description:
  Create workload
Parameters:
  # ----- Common Parameters -----
  Environment:
    Type         : String
    Default      : Prod
    AllowedValues:
      - Stg
      - Prod
    Description  : Select Environment
    MinLength    : 1
  # ----- RDS Parameters -----
  MasterUsername:
    Type       : String
    Description: RDS Master User Name
    MinLength  : 1
  MasterUserPassword:
    Type       : String
    Description: RDS Master User Passwordf
    MinLength  : 1
  # ----- Log Parameters -----
  LogGroupRetentionInDays:
    Type       : Number
    Description: Number of days to keep logs
    MinValue   : 3
    Default    : 3
  # ----- EC2 Auto Scaling Group Parameters -----
  Ec2InstanceType:
    Type         : String
    Description  : EC2 Instance Type
    Default      : t3.medium
    MinLength    : 1
    Default      : t2.micro
  Ec2AutoScalingGroupMinSize:
    Type       : Number
    Description: Min size of EC2 Auto Scaling Group
    MinValue   : 1
    Default    : 1
  Ec2AutoScalingGroupMaxSize:
    Type       : Number
    Description: Max size of EC2 Auto Scaling Group
    MinValue   : 1
    Default    : 1
  Ec2AutoScalingGroupDesiredCapacity:
    Type       : Number
    Description: Desired capacity of EC2 Auto Scaling Group
    MinValue   : 1
    Default    : 1
  # ----- ECS Parameters -----
  WebCpu:
    Type       : Number
    Description: Hard limit of CPU for Web containers
    MinValue   : 256
    Default    : 256
  WebMemory:
    Type       : Number
    Description: Hard limit of memory for Web containers (MiB)
    MinValue   : 512
    Default    : 512
  WebDesiredCount:
    Type       : Number
    Description: Desired Count of Web Task
    MinValue   : 1
    Default    : 1
  ApiCpu:
    Type       : Number
    Description: Hard limit of CPU for Api containers
    MinValue   : 256
    Default    : 256
  ApiMemory:
    Type       : Number
    Description: Hard limit of memory for Api containers (MiB)
    MinValue   : 1024
    Default    : 1024
  ApiDesiredCount:
    Type       : Number
    Description: Desired Count of Api Task
    MinValue   : 1
    Default    : 1
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Common Configuration
        Parameters:
          - Environment
      - Label:
          default: Database Configuration
        Parameters:
          - MasterUsername
          - MasterUserPassword
      - Label:
          default: Log Configuration
        Parameters:
          - LogGroupRetentionInDays
      - Label:
          default: EC2 Auto Scaling Group Configuration
        Parameters:
          - Ec2InstanceType
          - Ec2AutoScalingGroupMinSize
          - Ec2AutoScalingGroupMaxSize
          - Ec2AutoScalingGroupDesiredCapacity
      - Label:
          default: ECS Configuration
        Parameters:
          - WebCpu
          - WebMemory
          - WebDesiredCount
          - ApiCpu
          - ApiMemory
          - ApiDesiredCount
Mappings:
  Ec2AutoScaling:
    Stg :
      EC2KeyName: stg-ichiichiban
    Prod:
      EC2KeyName: prod-ichiichiban
Resources:
  # ---------------------------------------------------------------#
  # Create Security Groups
  #   - For ECS, RDS, ALB
  # ---------------------------------------------------------------#
  SecurityGroups:
    Type      : AWS::CloudFormation::Stack
    Properties:
      Parameters:
        ProductName: IchiIchiban
        Environment: !Ref Environment
        VpcId      :
          Fn::ImportValue:
            !Sub "IchiIchiban-${Environment}-VpcId"
      Tags:
        - Key  : Name
          Value: !Sub "IchiIchiban-${Environment}"
      TemplateURL: ./parts/security-groups.yml
  # ---------------------------------------------------------------#
  # Create RDS
  # ---------------------------------------------------------------#
  RDS:
    Type      : AWS::CloudFormation::Stack
    Properties:
      Parameters:
        ProductName           : IchiIchiban
        Environment           : !Ref Environment
        DBParameterGroupFamily: mysql8.0
        DBMasterInstanceClass : db.t2.micro
        PrivateSubnetIds      :
          !Join
            - ","
            - - Fn::ImportValue: !Sub "IchiIchiban-${Environment}-PrivateSubnetAId"
              - Fn::ImportValue: !Sub "IchiIchiban-${Environment}-PrivateSubnetCId"
        Engine                       : mysql
        EngineVersion                : "8.0.16"
        MasterUsername               : !Ref MasterUsername
        MasterUserPassword           : !Ref MasterUserPassword
        MonitoringRoleArn            : !ImportValue RDSMonitoringRoleArn
        RdsSecurityGroupIds          : !Join [ ",", [ !GetAtt SecurityGroups.Outputs.RdsSecurityGroupId ] ]
      Tags:
        - Key  : Name
          Value: !Sub "IchiIchiban-${Environment}"
      TemplateURL: ./parts/rds.yml
  # ---------------------------------------------------------------#
  # Create CloudWatch Logs and alarm
  # ---------------------------------------------------------------#
  Log:
    Type      : AWS::CloudFormation::Stack
    Properties:
      Parameters:
        ProductName    : IchiIchiban
        Environment    : !Ref Environment
        RetentionInDays: !Ref LogGroupRetentionInDays
      Tags:
        - Key  : Name
          Value: !Sub "IchiIchiban-${Environment}"
      TemplateURL: ./parts/log/log.yml
  # ---------------------------------------------------------------#
  # Create ECS Cluster
  # ---------------------------------------------------------------#
  # https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html
  ECSCluster:
    Type      : AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "IchiIchiban-${Environment}"
  # ---------------------------------------------------------------#
  # Create EC2 Auto Scaling
  # ---------------------------------------------------------------#
  Ec2AutoScaling:
    Type      : AWS::CloudFormation::Stack
    Properties:
      Parameters:
        ProductName            : IchiIchiban
        Environment            : !Ref Environment
        IamInstanceProfileRoles: !Join [ ",", [ !ImportValue EC2ECSRoleName ] ]
        DeviceName             : /dev/xvda
        VolumeSize             : 30
        VolumeType             : gp2
        ImageId                : ami-0934e28fe3e390537
        InstanceType           : !Ref Ec2InstanceType
        KeyName                : !FindInMap [ Ec2AutoScaling, !Ref Environment, EC2KeyName ]
        SecurityGroupIds       : !Join [ ",", [ !GetAtt SecurityGroups.Outputs.EcsSecurityGroupId ] ]
        UserDataContent        :
          !Sub |
            # Specified Cluster
            echo ECS_CLUSTER="${ECSCluster}" >> /etc/ecs/ecs.config
        MinSize               : !Ref Ec2AutoScalingGroupMinSize
        MaxSize               : !Ref Ec2AutoScalingGroupMaxSize
        DesiredCapacity       : !Ref Ec2AutoScalingGroupDesiredCapacity
        PublicSubnetIds       :
          !Join
            - ","
            - - Fn::ImportValue: !Sub "IchiIchiban-${Environment}-PublicSubnetAId"
              - Fn::ImportValue: !Sub "IchiIchiban-${Environment}-PublicSubnetCId"
      Tags:
        - Key  : Name
          Value: !Sub "IchiIchiban-${Environment}"
      TemplateURL: ./parts/ec2-auto-scaling/ec2-auto-scaling.yml
  # ---------------------------------------------------------------#
  # Create ECS Task Definition and Services (Web, Api)
  # ---------------------------------------------------------------#
  # ECSWebService:
  #   Type      : AWS::CloudFormation::Stack
  #   DependsOn :
  #     - Ec2AutoScaling
  #   Properties:
  #     Parameters:
  #       ProductName        : RealnetPlus
  #       Environment        : !Ref Environment
  #       WebCpu             : !Ref WebCpu
  #       WebMemory          : !Ref WebMemory
  #       LogGroupName       : !GetAtt Log.Outputs.WebLogGroupName
  #       ExecutionRoleArn   : !ImportValue TaskExecutionRoleArn
  #       TaskRoleArn        : !ImportValue TaskExecutionRoleArn
  #       ECSCluster         : !Ref ECSCluster
  #       WebDesiredCount    : !Ref WebDesiredCount
  #       TargetGroupArn     : !GetAtt WebALB.Outputs.TargetGroupArn
  #       ECSAutoScaleRoleArn: !ImportValue ECSAutoScaleRoleArn
  #     Tags:
  #       - Key  : Name
  #         Value: !Sub "RealnetPlus-${Environment}"
  #     TemplateURL: ./parts/ecs/web-ecs.yml
  # ECSApiService:
  #   Type      : AWS::CloudFormation::Stack
  #   DependsOn :
  #     - Ec2AutoScaling
  #   Properties:
  #     Parameters:
  #       ProductName        : RealnetPlus
  #       Environment        : !Ref Environment
  #       ApiCpu             : !Ref ApiCpu
  #       ApiMemory          : !Ref ApiMemory
  #       LogGroupName       : !GetAtt Log.Outputs.ApiLogGroupName
  #       ExecutionRoleArn   : !ImportValue TaskExecutionRoleArn
  #       TaskRoleArn        : !ImportValue TaskExecutionRoleArn
  #       ECSCluster         : !Ref ECSCluster
  #       ApiDesiredCount    : !Ref ApiDesiredCount
  #       TargetGroupArn     : !GetAtt ApiALB.Outputs.TargetGroupArn
  #       ECSAutoScaleRoleArn: !ImportValue ECSAutoScaleRoleArn
  #     Tags:
  #       - Key  : Name
  #         Value: !Sub "RealnetPlus-${Environment}"
  #     TemplateURL: ./parts/ecs/api-ecs.yml